@model Hackathon.UI.Models.QuestionReturnModel

<script src="~/lib/jquery/dist/jquery.min.js"></script>

<div class="sky">

    <div class="row p-30">
        <div class="col-3">
            <center><span class="header-txt">GAMER1</span></center>
        </div>
        <div class="col-6">
        </div>
        <div class="col-3">
            <center><span class="header-txt">GAMER2</span></center>
        </div>
    </div>
    <div class="row m-40">
        <div class="col-3">
            <center>
                <img src="https://raw.githubusercontent.com/LantareCode/random-this-and-thats/master/CSS/SuperMario-Animation/images/Coin.gif" height="40"> <span class="bottomline-score" id="gamer1Point" style="color: #ffffff;font-size:20px;">0</span>
            </center>
        </div>
        <div class="col-6">
        </div>
        <div class="col-3">
            <center>
                <span class="bottomline-time" id="gamer2Point" style="color: #ffffff;font-size:20px;">0</span><img src="https://raw.githubusercontent.com/LantareCode/random-this-and-thats/master/CSS/SuperMario-Animation/images/Coin.gif" height="40">
            </center>
        </div>
    </div>
    <center>
        <p>
            @Html.HiddenFor(ok => ok.GameKey)
            @Html.HiddenFor(ok => ok.Gamer1Key)
            @Html.HiddenFor(ok => ok.Gamer1Question)
        </p>

        <canvas class="card-box g-canvas" width="400" height="400" id="game"></canvas>

        <p class="m-40" id="loginForm">
            <a class="btn btn-lg btn-two w-120" href="/Home/Index">Pes Et !</a>
            <a class="btn btn-lg btn-two w-120" href="/Home/Game2?GameKey=@Model.GameKey" target="_blank">Paylaş</a>
            <div class="text-center">
                <button id="openModalBtn" type="button" class="btn btn-color px-5 mb-5 w-100 vsbl" data-toggle="modal" data-target="#loginModal" onclick="getQuestion();">Oyuna Gir </button>
            </div>
            <button class="btn btn-lg btn-two w-120 vsbl" type="button" onclick="getQuestion();">
                Başla
            </button>
        </p>

    </center>
    <script>
        var canvas = document.getElementById('game');
        var context = canvas.getContext('2d');
        var grid = 16;
        var snake = {
            x: 160,
            y: 160,
            dx: grid,
            dy: 0,
            cells: [],
            maxCells: 10
        };
        var count = 0;
        var apple = {
            x: 320,
            y: 320
        };
        function getRandomInt(min, max) {
            return Math.floor(Math.random() * (max - min)) + min;
        }
        // game loop
        function loop() {
            requestAnimationFrame(loop);
            // slow game loop to 15 fps instead of 60 - 60/15 = 4
            if (++count < 4) {
                return;
            }
            count = 0;
            context.clearRect(0, 0, canvas.width, canvas.height);
            snake.x += snake.dx;
            snake.y += snake.dy;
            // wrap snake position on edge of screen
            if (snake.x < 0) {
                snake.x = canvas.width - grid;
            }
            else if (snake.x >= canvas.width) {
                snake.x = 0;
            }
            if (snake.y < 0) {
                snake.y = canvas.height - grid;
            }
            else if (snake.y >= canvas.height) {
                snake.y = 0;
            }
            // keep track of where snake has been. front of the array is always the head
            snake.cells.unshift({ x: snake.x, y: snake.y });
            // remove cells as we move away from them
            if (snake.cells.length > snake.maxCells) {
                snake.cells.pop();
            }
            // draw apple
            context.fillStyle = 'red';
            context.fillRect(apple.x, apple.y, grid - 1, grid - 1);
            // draw snake
            context.fillStyle = 'green';
            snake.cells.forEach(function (cell, index) {
                context.fillRect(cell.x, cell.y, grid - 1, grid - 1);
                // snake ate apple
                if (cell.x === apple.x && cell.y === apple.y) {
                    snake.maxCells++;
                    apple.x = getRandomInt(0, 25) * grid;
                    apple.y = getRandomInt(0, 25) * grid;
                    document.getElementById("openModalBtn").click();
                }
                // check collision with all cells after this one (modified bubble sort)
                for (var i = index + 1; i < snake.cells.length; i++) {

                    // collision. reset game
                    if (cell.x === snake.cells[i].x && cell.y === snake.cells[i].y) {
                        snake.x = 160;
                        snake.y = 160;
                        snake.cells = [];
                        snake.maxCells = 4;
                        snake.dx = grid;
                        snake.dy = 0;
                        apple.x = getRandomInt(0, 25) * grid;
                        apple.y = getRandomInt(0, 25) * grid;
                    }
                }
            });
        }
        document.addEventListener('keydown', function (e) {
            // prevent snake from backtracking on itself
            if (e.which === 37 && snake.dx === 0) {
                snake.dx = -grid;
                snake.dy = 0;
            }
            else if (e.which === 38 && snake.dy === 0) {
                snake.dy = -grid;
                snake.dx = 0;
            }
            else if (e.which === 39 && snake.dx === 0) {
                snake.dx = grid;
                snake.dy = 0;
            }
            else if (e.which === 40 && snake.dy === 0) {
                snake.dy = grid;
                snake.dx = 0;
            }
        });
        requestAnimationFrame(loop);
    </script>


    <div class="modal fade" id="loginModal" tabindex="-1" role="dialog" aria-labelledby="loginModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 id="soru"></h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" id="closeModal">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" style="background:#052342;">
                    <table class="table" style="width:700px;border:none;">
                        <thead>
                        </thead>
                        <tbody>
                            <tr>
                                <th scope="row" style="width: 135px;border:none;">
                                    <button class="btn btn-lg btn-two w-120" type="button" onclick="setQuestion('A','1');">A</button>
                                </th>
                                <th style="border:none;">
                                    <label class="header-txt m-10" id="question1"></label>
                                </th>
                            </tr>
                            <tr>
                                <th scope="row" style="width: 135px;border:none;">
                                    <button class="btn btn-lg btn-two w-120" type="button" onclick="setQuestion('B','1');">B</button>
                                </th>
                                <th style="border:none;">
                                    <label class="header-txt m-10" id="question2"></label>
                                </th>
                            </tr>
                            <tr>
                                <th scope="row" style="width: 135px;border:none;">
                                    <button class="btn btn-lg btn-two w-120" type="button" onclick="setQuestion('C','1');">C</button>
                                </th>
                                <th style="border:none;">
                                    <label class="header-txt m-10" id="question3"></label>
                                </th>
                            </tr>
                            <tr>
                                <th scope="row" style="width: 135px;border:none;">
                                    <button class="btn btn-lg btn-two w-120" type="button" onclick="setQuestion('D','1');">D</button>
                                </th>
                                <th style="border:none;">
                                    <label class="header-txt m-10" id="question4"></label>
                                </th>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        sleep = milliseconds => new Promise(resolve => setTimeout(resolve, milliseconds));
        Refresh();
    });

    async function Refresh() {
        let exit = false;
        for (let i = 0; i < 100; i++) {
            await sleep(3 * 1000);

            let gameID = document.getElementById("GameKey").value;
            let gamerID = document.getElementById("Gamer1Key").value;

            $.ajax({
                type: 'POST',
                url: '/Game/GameStatus',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({ gameID, gamerID }),
                success: function (result) {
                    console.log(result);
                    if (result == true) {
                        window.location.href = "/Home/Index?winnerOrLoser=loser";
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Sıralama işlemi yapılamadı!");
                }
            });

            i = 1;

        }
    };
</script>

<script>

    document.getElementById('loginForm').addEventListener('submit', function (event) {
        event.preventDefault();
        $('#loginModal').modal('show');
    });
</script>